{
  "__01": " SIMP Packer manifest to run tests for simp-core or any module       ",
  "__02": "  that requires a fully working puppet server.                       ",
  "__03": "                                                                     ",
  "__04": " USAGE:                                                              ",
  "__05": "   `packer build -var-file=vars.json simp.json`              ",
  "__06": "                                                                     ",
  "__07": " NOTES:                                                              ",
  "__12": "   - The first `<wait10>`s are killing time until SSH can connect    ",
  "__15": "                                                                     ",
  "builders": [
    {
      "type": "virtualbox-vm",
      "vm_name": "{{user `vm_description`}}-fresh-from-ISO",
      "attach_snapshot": "fresh-install",
      "communicator": "ssh",
      "headless": "{{user `headless`}}",
      "output_directory": "{{user `output_directory`}}-{{ build_name }}",
      "shutdown_command": "sudo /sbin/shutdown -P now",
      "skip_export": "false",
      "ssh_agent_auth": "{{user `ssh_agent_auth`}}",
      "ssh_password": "{{user `new_password`}}",
      "ssh_pty": "true",
      "ssh_username": "simp",
      "vboxmanage": [
        [ "modifyvm", "{{.Name}}", "--memory", "4096" ],
        [ "modifyvm", "{{.Name}}", "--nic1", "nat" ],
        [ "modifyvm", "{{.Name}}", "--nic2", "hostonly" ],
        [ "modifyvm", "{{.Name}}", "--hostonlyadapter2", "{{user `host_only_network_name`}}" ],
        [ "modifyvm", "{{.Name}}", "--firmware", "{{user `firmware`}}" ],
        [ "modifyvm", "{{.Name}}", "--boot1", "disk" ],
        [ "modifyvm", "{{.Name}}", "--boot2", "dvd" ],
        [ "modifyvm", "{{.Name}}", "--macaddress2", "{{user `mac_address`}}" ],
        [ "modifyvm", "{{.Name}}", "--macaddress1", "auto" ],
        [ "modifyvm", "{{.Name}}", "--cpus", "2" ],
        [ "modifyvm", "{{.Name}}", "--accelerate3d", "off" ]
      ],
      "vrdp_bind_address": "{{user `vrdp_bind_address`}}",
      "vrdp_port_min": "{{user `vrdp_port_min`}}",
      "vrdp_port_max": "{{user `vrdp_port_max`}}"
    }
  ],
  "provisioners": [
    {
      "type": "shell-local",
      "inline": [
         "echo '===== pwd: \"{{ pwd }}\"'",
         "echo '===== simp_packer::initial_tests_and_setup'",
         "printf \"===== \\n\\n\\n\\n bolt plan run simp_packer::initial_tests_and_setup --targets ssh://{{ build `Host`}}:{{ build `Port`}} --user '{{ build `User`}}' --tmpdir /var/local/simp  --password '{{ build `Password` }}' --verbose  fips={{ user `fips` }} disk_encrypt={{ user `disk_encrypt` }} firmware={{ user `firmware` }} vagrant_password='{{user `vagrant_password`}}' umask={{ user `root_umask` }} |& tee  {{ pwd }}/plan-output.txt ||: \\n\\n\\n\\n=====\\n\"",
         "set -e -o pipefail",
         " bolt plan run simp_packer::initial_tests_and_setup --targets ssh://{{ build `Host`}}:{{ build `Port`}} --user '{{ build `User`}}' --password '{{ build `Password` }}' --tmpdir /var/local/simp --verbose  fips={{ user `fips` }} disk_encrypt={{ user `disk_encrypt` }} firmware={{ user `firmware` }} vagrant_password='{{user `vagrant_password`}}' umask={{ user `root_umask` }} |& tee  {{ pwd }}/plan-initial-setup-output.txt"
       ]
    },
    {
      "type": "shell",
      "valid_exit_codes": [ 0, 143 , 2300218],
      "remote_path": "/var/local/simp/reboot1.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo -E bash '{{.Path}}'",
      "expect_disconnect": true,
      "skip_clean": true,
      "inline" : [ "echo 'Rebooting...'\n[ -f /usr/sbin/reboot ] && /usr/sbin/reboot || /sbin/reboot" ]
    },
    {
      "type": "shell-local",
      "inline": [
         "echo '===== pwd: \"{{ pwd }}\"'",
         "echo '===== simp_packer::post_reboot_actions'",
         "printf \"===== \\n\\n\\n\\n bolt plan run simp_packer::post_reboot_actions --targets ssh://{{ build `Host`}}:{{ build `Port`}} --user vagrant --private-key files/vagrant_insecure_basebox_key --tmpdir /var/local/simp --verbose fips={{ user `fips` }} disk_encrypt={{ user `disk_encrypt` }} firmware={{ user `firmware` }} vagrant_password='{{user `vagrant_password`}}' umask={{ user `root_umask` }} |& tee  {{ pwd }}/plan-post-reboot-output.txt ||: \\n\\n\\n\\n=====\\n\""
       ]
    },
    {
      "type": "breakpoint",
      "disable": false,
      "note": "Pausing at breakpoint; press enter to continue"
    },
    {
      "type": "shell-local",
      "inline": [
         "echo '===== pwd: \"{{ pwd }}\"'",
         "echo '===== simp_packer::post_reboot_actions'",
         "printf \"===== \\n\\n\\n\\n bolt plan run simp_packer::post_reboot_actions --targets ssh://{{ build `Host`}}:{{ build `Port`}} --user vagrant --private-key files/vagrant_insecure_basebox_key --tmpdir /var/local/simp --verbose fips={{ user `fips` }} disk_encrypt={{ user `disk_encrypt` }} firmware={{ user `firmware` }} vagrant_password='{{user `vagrant_password`}}' umask={{ user `root_umask` }} |& tee  {{ pwd }}/plan-post-reboot-output.txt ||: \\n\\n\\n\\n=====\\n\"",
         "bolt plan run simp_packer::post_reboot_actions --targets ssh://{{ build `Host`}}:{{ build `Port`}} --user vagrant --private-key files/vagrant_insecure_basebox_key --tmpdir /var/local/simp --verbose fips={{ user `fips` }} disk_encrypt={{ user `disk_encrypt` }} firmware={{ user `firmware` }} vagrant_password='{{user `vagrant_password`}}' umask={{ user `root_umask` }} |& tee  {{ pwd }}/plan-post-reboot-output.txt ||: "
       ]
    },
    {
      "type": "breakpoint",
      "disable": false,
      "note": "Pausing at breakpoint; press enter to continue"
    }
  ],
  "variables": {
    "bootcmd": "simp",
    "new_password": "P@ssw0rdP@ssw0rd",
    "output_directory": "{{ pwd }}/OUTPUT/{{ isotime }}",
    "postprocess_output": "{{ pwd }}/POSTPROCESS_OUTPUT/{{ isotime }}",
    "root_umask": "0077",
    "ruby_path": "/opt/puppetlabs/puppet/bin/ruby",
    "simp_conf_file": "/var/local/simp/files/simp_conf.yaml",
    "simpenvironment": "production",
    "ssh_agent_auth": "true",
    "vagrant_password": "vagrant",
    "vrdp_bind_address": "0.0.0.0",
    "vrdp_port_min": "5950",
    "vrdp_port_max": "5959",
    "big_sleep": "<wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10>"
  }
}

