require 'simp/packer/vars_json_to_vagrant_box_json'
require 'simp/packer/publish/local_dir_tree'

namespace :vagrant do
  desc <<-BOXNAME_DESCRIPTION.gsub(%r{^ {4}}, '')
    Create boxname.json from SIMP ISO .json file

    This is useful if you just want a box  to test against

    Example:
      rake vagrant:json["$PWD/test-el7-v11/vars.json","$PWD/test-el7-v11/OUTPUT/SIMP6.X-CENTOS7-FIPS.box"]
  BOXNAME_DESCRIPTION
  task :json, [:simp_iso_json_file, :vagrantbox_path] do |_t, args|
    args.with_defaults(:simp_iso_json_file => 'vars.json')
    converter = Simp::Packer::VarsJsonToVagrantBoxJson.new(args.simp_iso_json_file)
    data = converter.vagrant_box_json(args.vagrantbox_path)
    require 'json'
    file = "#{data['name']}.json"
    puts "Writing file '#{file}'..."
    puts JSON.pretty_generate(data)
    File.open(file, 'w') { |f| f.puts JSON.pretty_generate(data) }
  end

  namespace :tree do
    desc <<-MSG.gsub(%r{^ {4}}, '')
    List boxes in a local Vagrant box directory tree

    Arguments:
    * tree_dir       Path to the top level of a Vagrant Cloud-like directory
                     structure.  (ENV: VAGRANT_BOX_DIR=)
    MSG
    task :list, [:tree_dir] do |_t, args|
      args.with_defaults(tree_dir: ENV['VAGRANT_BOX_DIR'] || '')
      raise "ERROR: :tree_dir '#{args.tree_dir}' not found.  (ENV: VAGRANT_BOX_DIR)" unless File.exist?(args.tree_dir)
      dir_tree = Simp::Packer::Publish::LocalDirTree.new(args.tree_dir)
      puts dir_tree.list_str
    end

    desc <<-MSG.gsub(%r{^ {4}}, '')
    Install vagrant box into a local directory tree, generate version metadata

    This "publishes" a Vagrant .box file into a directory tree that acts
    more-or-less like VagrantCloud/Atlus' box API.  It will create the directory
    tree, if it doesn't already exist.

    * tree_dir       Path to the top level of a Vagrant Cloud-like directory
                     structure.  This path will be created if it does not exist.
    * iso_json_file  Path SIMP ISO's .json file generated by SIMP build:auto
    * box_path       Path to the generated Vagrant .box file
    * action         'hardlink', 'copy', or 'move' .box to dest (default: hardlink)
    MSG
    task :publish, [:tree_dir, :simp_iso_json_file, :box_path, :copy] do |_t, args|
      args.with_defaults(:copy => 'hardlink')
      copy_words = %w[hardlink move copy]
      unless copy_words.include?(args.copy.to_s)
        raise "\nERROR: :copy was '#{args.copy}'; must be one of: '#{copy_words.join("', '")}'\n\n"
      end
      Simp::Packer::Publish::LocalDirTree.publish(
        args.simp_iso_json_file,
        args.box_path,
        args.tree_dir,
        args.copy.to_sym
      )
    end
  end
end
