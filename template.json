{
  "__01": " SIMP Packer manifest to run tests for simp-core or any module       ",
  "__02": "  that requires a fully working puppet server.                       ",
  "__03": "                                                                     ",
  "__04": " USAGE:                                                              ",
  "__05": "   `packer build -var-file=vars.json simp.json`              ",
  "__06": "                                                                     ",
  "__07": " NOTES:                                                              ",
  "__12": "   - The first `<wait10>`s are killing time until SSH can connect    ",
  "__15": "                                                                     ",
  "builders": [
    {
      "boot_command": [
        "simp fips=1<enter><wait>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10>",
        "{{user `big_sleep`}}",
        "simp<enter><wait><wait>UserPassword<enter>",
        "<wait><wait>",
        "UserPassword<enter>",
        "<wait5>",
        "{{user `new_password`}}<enter>",
        "<wait5>",
        "{{user `new_password`}}<enter>",
        "<wait5>",
        "exit<enter>",
        "<wait10>",
        "root<enter><wait><wait>RootPassword<enter>",
        "<wait5><wait>",
        "RootPassword<enter>",
        "<wait5>",
        "{{user `new_password`}}<enter>",
        "<wait5>",
        "{{user `new_password`}}<enter>",
        "<wait5>",
        "echo 'simp ALL=(ALL) NOPASSWD:ALL'  >> /etc/sudoers<enter>",
        "<wait5>",
        "sed -i -e '/Defaults *requiretty/d' /etc/sudoers<enter>",
        "<wait5>",
        "sed -i -e 's/ONBOOT=no/ONBOOT=yes/g' -e 's/DEFROUTE=yes/DEFROUTE=no/g' /etc/sysconfig/network-scripts/ifcfg-{{user `nat_interface`}}<enter>",
        "<wait5>",
        "<wait5>",
        "ifup {{user `nat_interface`}}<enter>",
        "<wait5>",
        "service sshd start<enter>",
        "<wait5>",
        "chkconfig sshd on<enter>",
        "<wait5>",
        "chkconfig firewalld off<enter>",
        "<wait5>",
        "chkconfig iptables off<enter>",
        "<wait5>",
        "udir=/etc/udev/rules.d net_rules=\"$udir/70-persistent-net.rules\"; gen_rules=\"$udir/75-persistent-net-generator.rules\"; [ -f \"$net_rules\" ] \u0026\u0026 { service network stop; rm -f \"$net_rules\"; ln -s /dev/null \"$gen_rules\" ; ln -s /dev/null \"$net_rules\"; service network start ; } <enter>",
        "<wait5>",
        "exit<enter>"
      ],
      "type": "virtualbox-iso",
      "communicator": "ssh",
      "disk_size": "50000",
      "guest_os_type": "RedHat_64",
      "hard_drive_interface": "sata",
      "headless": "{{user `headless`}}",
      "iso_checksum": "{{user `iso_checksum_type`}}:{{user `iso_checksum`}}",
      "iso_interface": "sata",
      "iso_url": "{{user `iso_url`}}",
      "output_directory": "{{user `output_directory`}}-{{ build_name }}",
      "sata_port_count": "30",
      "shutdown_command": "sudo /sbin/shutdown -P now",
      "skip_export": "false",
      "ssh_agent_auth": "{{user `ssh_agent_auth`}}",
      "ssh_password": "{{user `new_password`}}",
      "ssh_pty": "true",
      "ssh_username": "simp",
      "vboxmanage": [
        [
          "modifyvm",
          "{{.Name}}",
          "--memory",
          "4096"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--nic1",
          "nat"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--nic2",
          "hostonly"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--hostonlyadapter2",
          "{{user `host_only_network_name`}}"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--firmware",
          "{{user `firmware`}}"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--boot1",
          "disk"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--boot2",
          "dvd"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--macaddress2",
          "{{user `mac_address`}}"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--macaddress1",
          "auto"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--cpus",
          "2"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--accelerate3d",
          "off"
        ]
      ],
      "vm_name": "{{user `vm_description`}}",
      "vrdp_bind_address": "{{user `vrdp_bind_address`}}",
      "vrdp_port_min": "{{user `vrdp_port_min`}}",
      "vrdp_port_max": "{{user `vrdp_port_max`}}"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "sudo cat /etc/ssh/sshd_config"
      ],
      "remote_path": "/var/local/simp/inline-cat-sshd_config.sh"
    },
    {
      "type": "shell-local",
      "inline": [
         "echo '===== pwd: \"{{ pwd }}\"",
         "echo '===== simp_packer::do",
         "bolt plan run simp_packer::do --targets ssh://{{ build `Host`}}:{{ build `Port`}} --user '{{ build `User`}}' --password '{{ build `Password` }}' --verbose  fips={{ user `fips` }} disk_encrypt={{ user `disk_encrypt` }} firmware={{ user `firmware` }} vagrant_password='{{user `vagrant_password`}}' root_umask={{ user `root_umask` }} |& tee  {{ pwd }}/plan-output.txt ||: ",
         "echo '===== '",
         "echo '===== '",
         "echo '===== '",
         "echo '===== '",
         "echo '===== '",
         "echo \"===== sleeping for two hours $(date)\"",
         "echo '===== '",
         "echo '===== '",
         "echo '===== '",
         "echo '===== '",
         "echo '===== '",
         "sleep 7200"
       ]
    }
  ],
  "variables": {
    "bootcmd": "simp",
    "new_password": "P@ssw0rdP@ssw0rd",
    "output_directory": "{{ pwd }}/OUTPUT/{{ isotime }}",
    "postprocess_output": "{{ pwd }}/POSTPROCESS_OUTPUT/{{ isotime }}",
    "root_umask": "0077",
    "ruby_path": "/opt/puppetlabs/puppet/bin/ruby",
    "simp_conf_file": "/var/local/simp/files/simp_conf.yaml",
    "simpenvironment": "production",
    "ssh_agent_auth": "true",
    "vagrant_password": "vagrant",
    "vrdp_bind_address": "0.0.0.0",
    "vrdp_port_min": "5950",
    "vrdp_port_max": "5959",
    "big_sleep": "<wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10><wait10>"
  }
}
